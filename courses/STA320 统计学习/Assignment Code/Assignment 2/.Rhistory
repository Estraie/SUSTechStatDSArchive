test_data = heart_data[-train_indices, ]
lda_model = lda(AHD ~ .-X, data = train_data)
svm_linear_model = svm(AHD~.-X, data = train_data, kernel = "polynomial", d = 1, cost = 1e-1, scale = TRUE)
svm_k1_model = svm(AHD~.-X, data = train_data, kernel = "radial", gamma = 0.1, cost = 1e-1, scale = TRUE)
svm_k2_model = svm(AHD~.-X, data = train_data, kernel = "radial", gamma = 0.01, cost = 1e-1, scale = TRUE)
svm_k3_model = svm(AHD~.-X, data = train_data, kernel = "radial", gamma = 0.001, cost = 1e-1, scale = TRUE)
par(mfrow = c(1, 2))
par(family = "mono")
lda_prob = predict(lda_model, test_data, type = "response")
lda_pred = prediction(lda_prob$posterior[, 2], test_data$AHD)
lda_performance = performance(lda_pred, measure = "tpr", x.measure = "fpr")
svm_linear_prob = predict(svm_linear_model, test_data, type = "response")
svm_linear_prediction = prediction(svm_linear_prob, test_data$AHD)
svm_linear_performance = performance(svm_linear_prediction, measure = "tpr", x.measure = "fpr")
svm_k1_prob = predict(svm_k1_model, test_data, type = "response")
svm_k1_prediction = prediction(svm_k1_prob, test_data$AHD)
svm_k1_performance = performance(svm_k1_prediction, measure = "tpr", x.measure = "fpr")
svm_k2_prob = predict(svm_k2_model, test_data, type = "response")
svm_k2_prediction = prediction(svm_k2_prob, test_data$AHD)
svm_k2_performance = performance(svm_k2_prediction, measure = "tpr", x.measure = "fpr")
svm_k3_prob = predict(svm_k3_model, test_data, type = "response")
svm_k3_prediction = prediction(svm_k3_prob, test_data$AHD)
svm_k3_performance = performance(svm_k3_prediction, measure = "tpr", x.measure = "fpr")
plot(lda_performance, col = "darkblue")
plot(svm_linear_performance, col = "red", add = TRUE)
legend("bottomright", legend = c("SVC", "LDA"), fill = c("red", "darkblue"))
plot(svm_linear_performance, col = "red")
plot(svm_k3_performance, col = "black", add = TRUE)
plot(svm_k2_performance, col = "#00AA00", add = TRUE)
plot(svm_k1_performance, col = "darkblue", add = TRUE)
legend("bottomright", legend = c("SVC", "SVM: γ=1e-3", "SVM: γ=1e-2", "SVM: γ=1e-1"), fill = c("red", "darkblue", "#00AA00", "black"))
lda_pred = prediction(lda_prob$posterior[, 2], train_data$AHD)
svm_linear_performance = performance(svm_linear_prediction, measure = "tpr", x.measure = "fpr")
par(mfrow = c(1, 2))
par(family = "mono")
lda_prob = predict(lda_model, train_data, type = "response")
lda_pred = prediction(lda_prob$posterior[, 2], train_data$AHD)
lda_performance = performance(lda_pred, measure = "tpr", x.measure = "fpr")
svm_linear_prob = predict(svm_linear_model, train_data, type = "response")
svm_linear_prediction = prediction(svm_linear_prob, train_data$AHD)
svm_linear_performance = performance(svm_linear_prediction, measure = "tpr", x.measure = "fpr")
svm_k1_prob = predict(svm_k1_model, train_data, type = "response")
svm_k1_prediction = prediction(svm_k1_prob, train_data$AHD)
svm_k1_performance = performance(svm_k1_prediction, measure = "tpr", x.measure = "fpr")
svm_k2_prob = predict(svm_k2_model, train_data, type = "response")
svm_k2_prediction = prediction(svm_k2_prob, train_data$AHD)
svm_k2_performance = performance(svm_k2_prediction, measure = "tpr", x.measure = "fpr")
svm_k3_prob = predict(svm_k3_model, train_data, type = "response")
svm_k3_prediction = prediction(svm_k3_prob, train_data$AHD)
svm_k3_performance = performance(svm_k3_prediction, measure = "tpr", x.measure = "fpr")
plot(lda_performance, col = "darkblue")
plot(svm_linear_performance, col = "red", add = TRUE)
legend("bottomright", legend = c("SVC", "LDA"), fill = c("red", "darkblue"))
plot(svm_linear_performance, col = "red")
plot(svm_k3_performance, col = "black", add = TRUE)
plot(svm_k2_performance, col = "#00AA00", add = TRUE)
plot(svm_k1_performance, col = "darkblue", add = TRUE)
legend("bottomright", legend = c("SVC", "SVM: γ=1e-3", "SVM: γ=1e-2", "SVM: γ=1e-1"), fill = c("red", "darkblue", "#00AA00", "black"))
par(mfrow = c(1, 2))
par(family = "mono")
lda_prob = predict(lda_model, test_data, type = "response")
lda_pred = prediction(lda_prob$posterior[, 2], test_data$AHD)
lda_performance = performance(lda_pred, measure = "tpr", x.measure = "fpr")
svm_linear_prob = predict(svm_linear_model, test_data, type = "response")
svm_linear_prediction = prediction(svm_linear_prob, test_data$AHD)
svm_linear_performance = performance(svm_linear_prediction, measure = "tpr", x.measure = "fpr")
svm_k1_prob = predict(svm_k1_model, test_data, type = "response")
svm_k1_prediction = prediction(svm_k1_prob, test_data$AHD)
svm_k1_performance = performance(svm_k1_prediction, measure = "tpr", x.measure = "fpr")
svm_k2_prob = predict(svm_k2_model, test_data, type = "response")
svm_k2_prediction = prediction(svm_k2_prob, test_data$AHD)
svm_k2_performance = performance(svm_k2_prediction, measure = "tpr", x.measure = "fpr")
svm_k3_prob = predict(svm_k3_model, test_data, type = "response")
svm_k3_prediction = prediction(svm_k3_prob, test_data$AHD)
svm_k3_performance = performance(svm_k3_prediction, measure = "tpr", x.measure = "fpr")
plot(lda_performance, col = "darkblue")
plot(svm_linear_performance, col = "red", add = TRUE)
legend("bottomright", legend = c("SVC", "LDA"), fill = c("red", "darkblue"))
plot(svm_linear_performance, col = "red")
plot(svm_k3_performance, col = "black", add = TRUE)
plot(svm_k2_performance, col = "#00AA00", add = TRUE)
plot(svm_k1_performance, col = "darkblue", add = TRUE)
legend("bottomright", legend = c("SVC", "SVM: γ=1e-3", "SVM: γ=1e-2", "SVM: γ=1e-1"), fill = c("red", "darkblue", "#00AA00", "black"))
title(main = "ROC Plot on Training Set", line = -1)
par(mfrow = c(1, 2))
par(family = "mono")
lda_prob = predict(lda_model, train_data, type = "response")
lda_pred = prediction(lda_prob$posterior[, 2], train_data$AHD)
lda_performance = performance(lda_pred, measure = "tpr", x.measure = "fpr")
svm_linear_prob = predict(svm_linear_model, train_data, type = "response")
svm_linear_prediction = prediction(svm_linear_prob, train_data$AHD)
svm_linear_performance = performance(svm_linear_prediction, measure = "tpr", x.measure = "fpr")
svm_k1_prob = predict(svm_k1_model, train_data, type = "response")
svm_k1_prediction = prediction(svm_k1_prob, train_data$AHD)
svm_k1_performance = performance(svm_k1_prediction, measure = "tpr", x.measure = "fpr")
svm_k2_prob = predict(svm_k2_model, train_data, type = "response")
svm_k2_prediction = prediction(svm_k2_prob, train_data$AHD)
svm_k2_performance = performance(svm_k2_prediction, measure = "tpr", x.measure = "fpr")
svm_k3_prob = predict(svm_k3_model, train_data, type = "response")
svm_k3_prediction = prediction(svm_k3_prob, train_data$AHD)
svm_k3_performance = performance(svm_k3_prediction, measure = "tpr", x.measure = "fpr")
plot(lda_performance, col = "darkblue")
plot(svm_linear_performance, col = "red", add = TRUE)
legend("bottomright", legend = c("SVC", "LDA"), fill = c("red", "darkblue"))
plot(svm_linear_performance, col = "red")
plot(svm_k3_performance, col = "black", add = TRUE)
plot(svm_k2_performance, col = "#00AA00", add = TRUE)
plot(svm_k1_performance, col = "darkblue", add = TRUE)
legend("bottomright", legend = c("SVC", "SVM: γ=1e-3", "SVM: γ=1e-2", "SVM: γ=1e-1"), fill = c("red", "darkblue", "#00AA00", "black"))
title(main = "ROC Plot on Training Set", line = -1)
par(mfrow = c(1, 2))
par(family = "mono")
lda_prob = predict(lda_model, train_data, type = "response")
lda_pred = prediction(lda_prob$posterior[, 2], train_data$AHD)
lda_performance = performance(lda_pred, measure = "tpr", x.measure = "fpr")
svm_linear_prob = predict(svm_linear_model, train_data, type = "response")
svm_linear_prediction = prediction(svm_linear_prob, train_data$AHD)
svm_linear_performance = performance(svm_linear_prediction, measure = "tpr", x.measure = "fpr")
svm_k1_prob = predict(svm_k1_model, train_data, type = "response")
svm_k1_prediction = prediction(svm_k1_prob, train_data$AHD)
svm_k1_performance = performance(svm_k1_prediction, measure = "tpr", x.measure = "fpr")
svm_k2_prob = predict(svm_k2_model, train_data, type = "response")
svm_k2_prediction = prediction(svm_k2_prob, train_data$AHD)
svm_k2_performance = performance(svm_k2_prediction, measure = "tpr", x.measure = "fpr")
svm_k3_prob = predict(svm_k3_model, train_data, type = "response")
svm_k3_prediction = prediction(svm_k3_prob, train_data$AHD)
svm_k3_performance = performance(svm_k3_prediction, measure = "tpr", x.measure = "fpr")
plot(lda_performance, col = "darkblue")
plot(svm_linear_performance, col = "red", add = TRUE)
legend("bottomright", legend = c("SVC", "LDA"), fill = c("red", "darkblue"))
plot(svm_linear_performance, col = "red")
plot(svm_k3_performance, col = "black", add = TRUE)
plot(svm_k2_performance, col = "#00AA00", add = TRUE)
plot(svm_k1_performance, col = "darkblue", add = TRUE)
legend("bottomright", legend = c("SVC", "SVM: γ=1e-3", "SVM: γ=1e-2", "SVM: γ=1e-1"), fill = c("red", "darkblue", "#00AA00", "black"))
title(main = "ROC Plot on Training Set", line = -1, outer = TRUE)
par(mfrow = c(1, 2))
par(family = "mono")
lda_prob = predict(lda_model, test_data, type = "response")
lda_pred = prediction(lda_prob$posterior[, 2], test_data$AHD)
lda_performance = performance(lda_pred, measure = "tpr", x.measure = "fpr")
svm_linear_prob = predict(svm_linear_model, test_data, type = "response")
svm_linear_prediction = prediction(svm_linear_prob, test_data$AHD)
svm_linear_performance = performance(svm_linear_prediction, measure = "tpr", x.measure = "fpr")
svm_k1_prob = predict(svm_k1_model, test_data, type = "response")
svm_k1_prediction = prediction(svm_k1_prob, test_data$AHD)
svm_k1_performance = performance(svm_k1_prediction, measure = "tpr", x.measure = "fpr")
svm_k2_prob = predict(svm_k2_model, test_data, type = "response")
svm_k2_prediction = prediction(svm_k2_prob, test_data$AHD)
svm_k2_performance = performance(svm_k2_prediction, measure = "tpr", x.measure = "fpr")
svm_k3_prob = predict(svm_k3_model, test_data, type = "response")
svm_k3_prediction = prediction(svm_k3_prob, test_data$AHD)
svm_k3_performance = performance(svm_k3_prediction, measure = "tpr", x.measure = "fpr")
plot(lda_performance, col = "darkblue")
plot(svm_linear_performance, col = "red", add = TRUE)
legend("bottomright", legend = c("SVC", "LDA"), fill = c("red", "darkblue"))
plot(svm_linear_performance, col = "red")
plot(svm_k3_performance, col = "black", add = TRUE)
plot(svm_k2_performance, col = "#00AA00", add = TRUE)
plot(svm_k1_performance, col = "darkblue", add = TRUE)
legend("bottomright", legend = c("SVC", "SVM: γ=1e-3", "SVM: γ=1e-2", "SVM: γ=1e-1"), fill = c("red", "darkblue", "#00AA00", "black"))
title(main = "ROC Plot on Testing Set", line = -1, outer = TRUE)
par(mfrow = c(1, 2))
par(family = "mono")
lda_prob = predict(lda_model, test_data, type = "response")
lda_pred = prediction(lda_prob$posterior[, 2], test_data$AHD)
lda_performance = performance(lda_pred, measure = "tpr", x.measure = "fpr")
svm_linear_prob = predict(svm_linear_model, test_data, type = "response")
svm_linear_prediction = prediction(svm_linear_prob, test_data$AHD)
svm_linear_performance = performance(svm_linear_prediction, measure = "tpr", x.measure = "fpr")
svm_k1_prob = predict(svm_k1_model, test_data, type = "response")
svm_k1_prediction = prediction(svm_k1_prob, test_data$AHD)
svm_k1_performance = performance(svm_k1_prediction, measure = "tpr", x.measure = "fpr")
svm_k2_prob = predict(svm_k2_model, test_data, type = "response")
svm_k2_prediction = prediction(svm_k2_prob, test_data$AHD)
svm_k2_performance = performance(svm_k2_prediction, measure = "tpr", x.measure = "fpr")
svm_k3_prob = predict(svm_k3_model, test_data, type = "response")
svm_k3_prediction = prediction(svm_k3_prob, test_data$AHD)
svm_k3_performance = performance(svm_k3_prediction, measure = "tpr", x.measure = "fpr")
plot(lda_performance, col = "darkblue")
plot(svm_linear_performance, col = "red", add = TRUE)
legend("bottomright", legend = c("SVC", "LDA"), fill = c("red", "darkblue"))
abline(a = 0, b = 1, col = "grey", lty = 2)
plot(svm_linear_performance, col = "red")
plot(svm_k3_performance, col = "black", add = TRUE)
plot(svm_k2_performance, col = "#00AA00", add = TRUE)
plot(svm_k1_performance, col = "darkblue", add = TRUE)
legend("bottomright", legend = c("SVC", "SVM: γ=1e-3", "SVM: γ=1e-2", "SVM: γ=1e-1"), fill = c("red", "darkblue", "#00AA00", "black"))
title(main = "ROC Plot on Testing Set", line = -1, outer = TRUE)
abline(a = 0, b = 1, col = "grey", lty = 2)
par(mfrow = c(1, 2))
par(family = "mono")
lda_prob = predict(lda_model, train_data, type = "response")
lda_pred = prediction(lda_prob$posterior[, 2], train_data$AHD)
lda_performance = performance(lda_pred, measure = "tpr", x.measure = "fpr")
svm_linear_prob = predict(svm_linear_model, train_data, type = "response")
svm_linear_prediction = prediction(svm_linear_prob, train_data$AHD)
svm_linear_performance = performance(svm_linear_prediction, measure = "tpr", x.measure = "fpr")
svm_k1_prob = predict(svm_k1_model, train_data, type = "response")
svm_k1_prediction = prediction(svm_k1_prob, train_data$AHD)
svm_k1_performance = performance(svm_k1_prediction, measure = "tpr", x.measure = "fpr")
svm_k2_prob = predict(svm_k2_model, train_data, type = "response")
svm_k2_prediction = prediction(svm_k2_prob, train_data$AHD)
svm_k2_performance = performance(svm_k2_prediction, measure = "tpr", x.measure = "fpr")
svm_k3_prob = predict(svm_k3_model, train_data, type = "response")
svm_k3_prediction = prediction(svm_k3_prob, train_data$AHD)
svm_k3_performance = performance(svm_k3_prediction, measure = "tpr", x.measure = "fpr")
plot(lda_performance, col = "darkblue")
plot(svm_linear_performance, col = "red", add = TRUE)
legend("bottomright", legend = c("SVC", "LDA"), fill = c("red", "darkblue"))
abline(a = 0, b = 1, col = "grey", lty = 2)
plot(svm_linear_performance, col = "red")
plot(svm_k3_performance, col = "black", add = TRUE)
plot(svm_k2_performance, col = "#00AA00", add = TRUE)
plot(svm_k1_performance, col = "darkblue", add = TRUE)
legend("bottomright", legend = c("SVC", "SVM: γ=1e-3", "SVM: γ=1e-2", "SVM: γ=1e-1"), fill = c("red", "darkblue", "#00AA00", "black"))
title(main = "ROC Plot on Training Set", line = -1, outer = TRUE)
abline(a = 0, b = 1, col = "grey", lty = 2)
par(mfrow = c(1, 2))
par(family = "mono")
lda_prob = predict(lda_model, train_data, type = "response")
lda_pred = prediction(lda_prob$posterior[, 2], train_data$AHD)
lda_performance = performance(lda_pred, measure = "tpr", x.measure = "fpr")
svm_linear_prob = predict(svm_linear_model, train_data, type = "response")
svm_linear_prediction = prediction(svm_linear_prob, train_data$AHD)
svm_linear_performance = performance(svm_linear_prediction, measure = "tpr", x.measure = "fpr")
svm_k1_prob = predict(svm_k1_model, train_data, type = "response")
svm_k1_prediction = prediction(svm_k1_prob, train_data$AHD)
svm_k1_performance = performance(svm_k1_prediction, measure = "tpr", x.measure = "fpr")
svm_k2_prob = predict(svm_k2_model, train_data, type = "response")
svm_k2_prediction = prediction(svm_k2_prob, train_data$AHD)
svm_k2_performance = performance(svm_k2_prediction, measure = "tpr", x.measure = "fpr")
svm_k3_prob = predict(svm_k3_model, train_data, type = "response")
svm_k3_prediction = prediction(svm_k3_prob, train_data$AHD)
svm_k3_performance = performance(svm_k3_prediction, measure = "tpr", x.measure = "fpr")
plot(lda_performance, col = "darkblue")
plot(svm_linear_performance, col = "red", add = TRUE)
legend("bottomright", legend = c("SVC", "LDA"), fill = c("red", "darkblue"))
abline(a = 0, b = 1, col = "grey", lty = 2)
plot(svm_linear_performance, col = "red")
plot(svm_k3_performance, col = "black", add = TRUE)
plot(svm_k2_performance, col = "#00AA00", add = TRUE)
plot(svm_k1_performance, col = "darkblue", add = TRUE)
legend("bottomright", legend = c("SVC", "SVM: γ=1e-3", "SVM: γ=1e-2", "SVM: γ=1e-1"), fill = c("red", "black", "#00AA00", "darkblue"))
title(main = "ROC Plot on Training Set", line = -1, outer = TRUE)
abline(a = 0, b = 1, col = "grey", lty = 2)
par(mfrow = c(1, 2))
par(family = "mono")
lda_prob = predict(lda_model, test_data, type = "response")
lda_pred = prediction(lda_prob$posterior[, 2], test_data$AHD)
lda_performance = performance(lda_pred, measure = "tpr", x.measure = "fpr")
svm_linear_prob = predict(svm_linear_model, test_data, type = "response")
svm_linear_prediction = prediction(svm_linear_prob, test_data$AHD)
svm_linear_performance = performance(svm_linear_prediction, measure = "tpr", x.measure = "fpr")
svm_k1_prob = predict(svm_k1_model, test_data, type = "response")
svm_k1_prediction = prediction(svm_k1_prob, test_data$AHD)
svm_k1_performance = performance(svm_k1_prediction, measure = "tpr", x.measure = "fpr")
svm_k2_prob = predict(svm_k2_model, test_data, type = "response")
svm_k2_prediction = prediction(svm_k2_prob, test_data$AHD)
svm_k2_performance = performance(svm_k2_prediction, measure = "tpr", x.measure = "fpr")
svm_k3_prob = predict(svm_k3_model, test_data, type = "response")
svm_k3_prediction = prediction(svm_k3_prob, test_data$AHD)
svm_k3_performance = performance(svm_k3_prediction, measure = "tpr", x.measure = "fpr")
plot(lda_performance, col = "darkblue")
plot(svm_linear_performance, col = "red", add = TRUE)
legend("bottomright", legend = c("SVC", "LDA"), fill = c("red", "darkblue"))
abline(a = 0, b = 1, col = "grey", lty = 2)
plot(svm_linear_performance, col = "red")
plot(svm_k3_performance, col = "black", add = TRUE)
plot(svm_k2_performance, col = "#00AA00", add = TRUE)
plot(svm_k1_performance, col = "darkblue", add = TRUE)
legend("bottomright", legend = c("SVC", "SVM: γ=1e-3", "SVM: γ=1e-2", "SVM: γ=1e-1"), fill = c("red", "black", "#00AA00", "darkblue"))
title(main = "ROC Plot on Testing Set", line = -1, outer = TRUE)
abline(a = 0, b = 1, col = "grey", lty = 2)
heart_data = read.csv("Heart.csv")
heart_data = na.omit(heart_data)
heart_data$AHD[heart_data$AHD == "Yes"] = 1
heart_data$AHD[heart_data$AHD == "No"] = 0
heart_data$AHD = as.numeric(heart_data$AHD)
set.seed(114514)
train_indices = sample(1 : nrow(heart_data), 207)
train_data = heart_data[train_indices, ]
test_data = heart_data[-train_indices, ]
lda_model = lda(AHD ~ .-X, data = train_data)
svm_linear_model = svm(AHD~.-X, data = train_data, kernel = "polynomial", d = 1, cost = 1e-1, scale = TRUE)
svm_k1_model = svm(AHD~.-X, data = train_data, kernel = "radial", gamma = 0.1, cost = 1e-1, scale = TRUE)
svm_k2_model = svm(AHD~.-X, data = train_data, kernel = "radial", gamma = 0.01, cost = 1e-1, scale = TRUE)
svm_k3_model = svm(AHD~.-X, data = train_data, kernel = "radial", gamma = 0.001, cost = 1e-1, scale = TRUE)
par(mfrow = c(1, 2))
par(family = "mono")
lda_prob = predict(lda_model, train_data, type = "response")
lda_pred = prediction(lda_prob$posterior[, 2], train_data$AHD)
lda_performance = performance(lda_pred, measure = "tpr", x.measure = "fpr")
svm_linear_prob = predict(svm_linear_model, train_data, type = "response")
svm_linear_prediction = prediction(svm_linear_prob, train_data$AHD)
svm_linear_performance = performance(svm_linear_prediction, measure = "tpr", x.measure = "fpr")
svm_k1_prob = predict(svm_k1_model, train_data, type = "response")
svm_k1_prediction = prediction(svm_k1_prob, train_data$AHD)
svm_k1_performance = performance(svm_k1_prediction, measure = "tpr", x.measure = "fpr")
svm_k2_prob = predict(svm_k2_model, train_data, type = "response")
svm_k2_prediction = prediction(svm_k2_prob, train_data$AHD)
svm_k2_performance = performance(svm_k2_prediction, measure = "tpr", x.measure = "fpr")
svm_k3_prob = predict(svm_k3_model, train_data, type = "response")
svm_k3_prediction = prediction(svm_k3_prob, train_data$AHD)
svm_k3_performance = performance(svm_k3_prediction, measure = "tpr", x.measure = "fpr")
plot(lda_performance, col = "darkblue")
plot(svm_linear_performance, col = "red", add = TRUE)
legend("bottomright", legend = c("SVC", "LDA"), fill = c("red", "darkblue"))
abline(a = 0, b = 1, col = "grey", lty = 2)
plot(svm_linear_performance, col = "red")
plot(svm_k3_performance, col = "black", add = TRUE)
plot(svm_k2_performance, col = "#00AA00", add = TRUE)
plot(svm_k1_performance, col = "darkblue", add = TRUE)
legend("bottomright", legend = c("SVC", "SVM: γ=1e-3", "SVM: γ=1e-2", "SVM: γ=1e-1"), fill = c("red", "black", "#00AA00", "darkblue"))
title(main = "ROC Plot on Training Set", line = -1, outer = TRUE)
abline(a = 0, b = 1, col = "grey", lty = 2)
par(mfrow = c(1, 2))
par(family = "mono")
lda_prob = predict(lda_model, test_data, type = "response")
lda_pred = prediction(lda_prob$posterior[, 2], test_data$AHD)
lda_performance = performance(lda_pred, measure = "tpr", x.measure = "fpr")
svm_linear_prob = predict(svm_linear_model, test_data, type = "response")
svm_linear_prediction = prediction(svm_linear_prob, test_data$AHD)
svm_linear_performance = performance(svm_linear_prediction, measure = "tpr", x.measure = "fpr")
svm_k1_prob = predict(svm_k1_model, test_data, type = "response")
svm_k1_prediction = prediction(svm_k1_prob, test_data$AHD)
svm_k1_performance = performance(svm_k1_prediction, measure = "tpr", x.measure = "fpr")
svm_k2_prob = predict(svm_k2_model, test_data, type = "response")
svm_k2_prediction = prediction(svm_k2_prob, test_data$AHD)
svm_k2_performance = performance(svm_k2_prediction, measure = "tpr", x.measure = "fpr")
svm_k3_prob = predict(svm_k3_model, test_data, type = "response")
svm_k3_prediction = prediction(svm_k3_prob, test_data$AHD)
svm_k3_performance = performance(svm_k3_prediction, measure = "tpr", x.measure = "fpr")
plot(lda_performance, col = "darkblue")
plot(svm_linear_performance, col = "red", add = TRUE)
legend("bottomright", legend = c("SVC", "LDA"), fill = c("red", "darkblue"))
abline(a = 0, b = 1, col = "grey", lty = 2)
plot(svm_linear_performance, col = "red")
plot(svm_k3_performance, col = "black", add = TRUE)
plot(svm_k2_performance, col = "#00AA00", add = TRUE)
plot(svm_k1_performance, col = "darkblue", add = TRUE)
legend("bottomright", legend = c("SVC", "SVM: γ=1e-3", "SVM: γ=1e-2", "SVM: γ=1e-1"), fill = c("red", "black", "#00AA00", "darkblue"))
title(main = "ROC Plot on Testing Set", line = -1, outer = TRUE)
abline(a = 0, b = 1, col = "grey", lty = 2)
heart_data = read.csv("Heart.csv")
heart_data = na.omit(heart_data)
heart_data$AHD[heart_data$AHD == "Yes"] = 1
heart_data$AHD[heart_data$AHD == "No"] = 0
heart_data$AHD = as.numeric(heart_data$AHD)
set.seed(NULL)
train_indices = sample(1 : nrow(heart_data), 207)
train_data = heart_data[train_indices, ]
test_data = heart_data[-train_indices, ]
lda_model = lda(AHD ~ .-X, data = train_data)
svm_linear_model = svm(AHD~.-X, data = train_data, kernel = "polynomial", d = 1, cost = 1e-1, scale = TRUE)
svm_k1_model = svm(AHD~.-X, data = train_data, kernel = "radial", gamma = 0.1, cost = 1e-1, scale = TRUE)
svm_k2_model = svm(AHD~.-X, data = train_data, kernel = "radial", gamma = 0.01, cost = 1e-1, scale = TRUE)
svm_k3_model = svm(AHD~.-X, data = train_data, kernel = "radial", gamma = 0.001, cost = 1e-1, scale = TRUE)
par(mfrow = c(1, 2))
par(family = "mono")
lda_prob = predict(lda_model, train_data, type = "response")
lda_pred = prediction(lda_prob$posterior[, 2], train_data$AHD)
lda_performance = performance(lda_pred, measure = "tpr", x.measure = "fpr")
svm_linear_prob = predict(svm_linear_model, train_data, type = "response")
svm_linear_prediction = prediction(svm_linear_prob, train_data$AHD)
svm_linear_performance = performance(svm_linear_prediction, measure = "tpr", x.measure = "fpr")
svm_k1_prob = predict(svm_k1_model, train_data, type = "response")
svm_k1_prediction = prediction(svm_k1_prob, train_data$AHD)
svm_k1_performance = performance(svm_k1_prediction, measure = "tpr", x.measure = "fpr")
svm_k2_prob = predict(svm_k2_model, train_data, type = "response")
svm_k2_prediction = prediction(svm_k2_prob, train_data$AHD)
svm_k2_performance = performance(svm_k2_prediction, measure = "tpr", x.measure = "fpr")
svm_k3_prob = predict(svm_k3_model, train_data, type = "response")
svm_k3_prediction = prediction(svm_k3_prob, train_data$AHD)
svm_k3_performance = performance(svm_k3_prediction, measure = "tpr", x.measure = "fpr")
plot(lda_performance, col = "darkblue")
plot(svm_linear_performance, col = "red", add = TRUE)
legend("bottomright", legend = c("SVC", "LDA"), fill = c("red", "darkblue"))
abline(a = 0, b = 1, col = "grey", lty = 2)
plot(svm_linear_performance, col = "red")
plot(svm_k3_performance, col = "black", add = TRUE)
plot(svm_k2_performance, col = "#00AA00", add = TRUE)
plot(svm_k1_performance, col = "darkblue", add = TRUE)
legend("bottomright", legend = c("SVC", "SVM: γ=1e-3", "SVM: γ=1e-2", "SVM: γ=1e-1"), fill = c("red", "black", "#00AA00", "darkblue"))
title(main = "ROC Plot on Training Set", line = -1, outer = TRUE)
abline(a = 0, b = 1, col = "grey", lty = 2)
par(mfrow = c(1, 2))
par(family = "mono")
lda_prob = predict(lda_model, train_data, type = "response")
lda_pred = prediction(lda_prob$posterior[, 2], train_data$AHD)
lda_performance = performance(lda_pred, measure = "tpr", x.measure = "fpr")
svm_linear_prob = predict(svm_linear_model, train_data, type = "response")
svm_linear_prediction = prediction(svm_linear_prob, train_data$AHD)
svm_linear_performance = performance(svm_linear_prediction, measure = "tpr", x.measure = "fpr")
svm_k1_prob = predict(svm_k1_model, train_data, type = "response")
svm_k1_prediction = prediction(svm_k1_prob, train_data$AHD)
svm_k1_performance = performance(svm_k1_prediction, measure = "tpr", x.measure = "fpr")
svm_k2_prob = predict(svm_k2_model, train_data, type = "response")
svm_k2_prediction = prediction(svm_k2_prob, train_data$AHD)
svm_k2_performance = performance(svm_k2_prediction, measure = "tpr", x.measure = "fpr")
svm_k3_prob = predict(svm_k3_model, train_data, type = "response")
svm_k3_prediction = prediction(svm_k3_prob, train_data$AHD)
svm_k3_performance = performance(svm_k3_prediction, measure = "tpr", x.measure = "fpr")
plot(lda_performance, col = "darkblue")
plot(svm_linear_performance, col = "red", add = TRUE)
legend("bottomright", legend = c("SVC", "LDA"), fill = c("red", "darkblue"))
abline(a = 0, b = 1, col = "grey", lty = 2)
plot(svm_linear_performance, col = "red")
plot(svm_k3_performance, col = "black", add = TRUE)
plot(svm_k2_performance, col = "#00AA00", add = TRUE)
plot(svm_k1_performance, col = "darkblue", add = TRUE)
legend("bottomright", legend = c("SVC", "SVM: γ=1e-3", "SVM: γ=1e-2", "SVM: γ=1e-1"), fill = c("red", "black", "#00AA00", "darkblue"))
title(main = "ROC Plot on Training Set", line = -1, outer = TRUE)
abline(a = 0, b = 1, col = "grey", lty = 2)
par(mfrow = c(1, 2))
par(family = "mono")
lda_prob = predict(lda_model, test_data, type = "response")
lda_pred = prediction(lda_prob$posterior[, 2], test_data$AHD)
lda_performance = performance(lda_pred, measure = "tpr", x.measure = "fpr")
svm_linear_prob = predict(svm_linear_model, test_data, type = "response")
svm_linear_prediction = prediction(svm_linear_prob, test_data$AHD)
svm_linear_performance = performance(svm_linear_prediction, measure = "tpr", x.measure = "fpr")
svm_k1_prob = predict(svm_k1_model, test_data, type = "response")
svm_k1_prediction = prediction(svm_k1_prob, test_data$AHD)
svm_k1_performance = performance(svm_k1_prediction, measure = "tpr", x.measure = "fpr")
svm_k2_prob = predict(svm_k2_model, test_data, type = "response")
svm_k2_prediction = prediction(svm_k2_prob, test_data$AHD)
svm_k2_performance = performance(svm_k2_prediction, measure = "tpr", x.measure = "fpr")
svm_k3_prob = predict(svm_k3_model, test_data, type = "response")
svm_k3_prediction = prediction(svm_k3_prob, test_data$AHD)
svm_k3_performance = performance(svm_k3_prediction, measure = "tpr", x.measure = "fpr")
plot(lda_performance, col = "darkblue")
plot(svm_linear_performance, col = "red", add = TRUE)
legend("bottomright", legend = c("SVC", "LDA"), fill = c("red", "darkblue"))
abline(a = 0, b = 1, col = "grey", lty = 2)
plot(svm_linear_performance, col = "red")
plot(svm_k3_performance, col = "black", add = TRUE)
plot(svm_k2_performance, col = "#00AA00", add = TRUE)
plot(svm_k1_performance, col = "darkblue", add = TRUE)
legend("bottomright", legend = c("SVC", "SVM: γ=1e-3", "SVM: γ=1e-2", "SVM: γ=1e-1"), fill = c("red", "black", "#00AA00", "darkblue"))
title(main = "ROC Plot on Testing Set", line = -1, outer = TRUE)
abline(a = 0, b = 1, col = "grey", lty = 2)
heart_data = read.csv("Heart.csv")
heart_data = na.omit(heart_data)
heart_data$AHD[heart_data$AHD == "Yes"] = 1
heart_data$AHD[heart_data$AHD == "No"] = 0
heart_data$AHD = as.numeric(heart_data$AHD)
set.seed(NULL)
train_indices = sample(1 : nrow(heart_data), 207)
train_data = heart_data[train_indices, ]
test_data = heart_data[-train_indices, ]
lda_model = lda(AHD ~ .-X, data = train_data)
svm_linear_model = svm(AHD~.-X, data = train_data, kernel = "polynomial", d = 1, cost = 1e-1, scale = TRUE)
svm_k1_model = svm(AHD~.-X, data = train_data, kernel = "radial", gamma = 0.1, cost = 1e-1, scale = TRUE)
svm_k2_model = svm(AHD~.-X, data = train_data, kernel = "radial", gamma = 0.01, cost = 1e-1, scale = TRUE)
svm_k3_model = svm(AHD~.-X, data = train_data, kernel = "radial", gamma = 0.001, cost = 1e-1, scale = TRUE)
par(mfrow = c(1, 2))
par(family = "mono")
lda_prob = predict(lda_model, train_data, type = "response")
lda_pred = prediction(lda_prob$posterior[, 2], train_data$AHD)
lda_performance = performance(lda_pred, measure = "tpr", x.measure = "fpr")
svm_linear_prob = predict(svm_linear_model, train_data, type = "response")
svm_linear_prediction = prediction(svm_linear_prob, train_data$AHD)
svm_linear_performance = performance(svm_linear_prediction, measure = "tpr", x.measure = "fpr")
svm_k1_prob = predict(svm_k1_model, train_data, type = "response")
svm_k1_prediction = prediction(svm_k1_prob, train_data$AHD)
svm_k1_performance = performance(svm_k1_prediction, measure = "tpr", x.measure = "fpr")
svm_k2_prob = predict(svm_k2_model, train_data, type = "response")
svm_k2_prediction = prediction(svm_k2_prob, train_data$AHD)
svm_k2_performance = performance(svm_k2_prediction, measure = "tpr", x.measure = "fpr")
svm_k3_prob = predict(svm_k3_model, train_data, type = "response")
svm_k3_prediction = prediction(svm_k3_prob, train_data$AHD)
svm_k3_performance = performance(svm_k3_prediction, measure = "tpr", x.measure = "fpr")
plot(lda_performance, col = "darkblue")
plot(svm_linear_performance, col = "red", add = TRUE)
legend("bottomright", legend = c("SVC", "LDA"), fill = c("red", "darkblue"))
abline(a = 0, b = 1, col = "grey", lty = 2)
plot(svm_linear_performance, col = "red")
plot(svm_k3_performance, col = "black", add = TRUE)
plot(svm_k2_performance, col = "#00AA00", add = TRUE)
plot(svm_k1_performance, col = "darkblue", add = TRUE)
legend("bottomright", legend = c("SVC", "SVM: γ=1e-3", "SVM: γ=1e-2", "SVM: γ=1e-1"), fill = c("red", "black", "#00AA00", "darkblue"))
title(main = "ROC Plot on Training Set", line = -1, outer = TRUE)
abline(a = 0, b = 1, col = "grey", lty = 2)
par(mfrow = c(1, 2))
par(family = "mono")
lda_prob = predict(lda_model, test_data, type = "response")
lda_pred = prediction(lda_prob$posterior[, 2], test_data$AHD)
lda_performance = performance(lda_pred, measure = "tpr", x.measure = "fpr")
svm_linear_prob = predict(svm_linear_model, test_data, type = "response")
svm_linear_prediction = prediction(svm_linear_prob, test_data$AHD)
svm_linear_performance = performance(svm_linear_prediction, measure = "tpr", x.measure = "fpr")
svm_k1_prob = predict(svm_k1_model, test_data, type = "response")
svm_k1_prediction = prediction(svm_k1_prob, test_data$AHD)
svm_k1_performance = performance(svm_k1_prediction, measure = "tpr", x.measure = "fpr")
svm_k2_prob = predict(svm_k2_model, test_data, type = "response")
svm_k2_prediction = prediction(svm_k2_prob, test_data$AHD)
svm_k2_performance = performance(svm_k2_prediction, measure = "tpr", x.measure = "fpr")
svm_k3_prob = predict(svm_k3_model, test_data, type = "response")
svm_k3_prediction = prediction(svm_k3_prob, test_data$AHD)
svm_k3_performance = performance(svm_k3_prediction, measure = "tpr", x.measure = "fpr")
plot(lda_performance, col = "darkblue")
plot(svm_linear_performance, col = "red", add = TRUE)
legend("bottomright", legend = c("SVC", "LDA"), fill = c("red", "darkblue"))
abline(a = 0, b = 1, col = "grey", lty = 2)
plot(svm_linear_performance, col = "red")
plot(svm_k3_performance, col = "black", add = TRUE)
plot(svm_k2_performance, col = "#00AA00", add = TRUE)
plot(svm_k1_performance, col = "darkblue", add = TRUE)
legend("bottomright", legend = c("SVC", "SVM: γ=1e-3", "SVM: γ=1e-2", "SVM: γ=1e-1"), fill = c("red", "black", "#00AA00", "darkblue"))
title(main = "ROC Plot on Testing Set", line = -1, outer = TRUE)
abline(a = 0, b = 1, col = "grey", lty = 2)
